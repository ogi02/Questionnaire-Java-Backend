---
name: Unit Tests

# Trigger mega-linter at every push.
on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions: {}

jobs:
  run_tests:
    runs-on: self-hosted

    permissions:
      checks: write
      contents: write
      issues: write
      pull-requests: write

    steps:
      # Checkout the repository
      - name: Checkout the Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "oracle"
          java-version: "21"
          cache: maven

      # Build and Test
      - name: Build & Test
        run: mvn -B package -Pcoverage

      # Report test results
      - name: Publish Test Report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/target/surefire-reports/TEST-*.xml"

#      - name: Generate JaCoCo Badge
#        id: jacoco
#        uses: cicirello/jacoco-badge-generator@v2
#        with:
#          badges-directory: badges
#          generate-branches-badge: true
#          generate-summary: true

      - name: Log Coverage to Workflow Output
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"

      - name: Upload JaCoCo coverage report as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco-report/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          title: '# :lobster: Coverage Report'
          pass-emoji: ':green_circle:'
          fail-emoji: ':red_circle:'

#      - name: Comment on PR with coverage percentages
#        if: ${{ github.event_name == 'pull_request' }}
#        run: |
#          REPORT=$(<badges/coverage-summary.json)
#          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
#          NEWLINE=$'\n'
#          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}"
#          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
#        continue-on-error: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
